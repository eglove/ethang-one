// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("NX_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output   = "../libs/prisma-nestjs-graphql/src/lib"
}

model CalorieRecord {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  calories     Int
  leftForToday Int?
  Person       Person   @relation(fields: [personId], references: [id])
  personId     String   @db.ObjectId
}

model FinanceRecord {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  accountName  String
  currentValue Float
  recordedDate DateTime
}

model Habit {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @updatedAt
  name          String    @unique
  recurInterval String
  dueDate       DateTime
}

model Person {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  firstName String
  lastName  String
  birthday  DateTime
  weightLbs Float
  heightIn  Float
  User      User            @relation(fields: [userId], references: [id])
  userId    String          @unique @db.ObjectId
  Calorie   CalorieRecord[]
}

model ShortUrl {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  originalUrl    String   @unique
  usedKeyId      String   @unique @db.ObjectId
  expirationDate DateTime
  shortUrlKey    UsedKey  @relation(fields: [usedKeyId], references: [id])
}

model UnusedKey {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  key       String   @unique
}

model UsedKey {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  key       String    @unique
  ShortUrl  ShortUrl?
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  role      String
  Person    Person?
}
