name: "EthanG CI"

on:
  push:
    branches: [ develop ]
  schedule:
    - cron: '43 21 * * 3'

jobs:
  test:
    name: LintNTest
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npx pnpm i
      - run: npx nx affected --target=lint --fix
      - run: npx nx affected --target=build
        env:
          NX_8BASE_API_TOKEN: ${{ secrets.NX_8BASE_API_ADMIN_TOKEN }}
      - run: npx nx affected --target=test
        env:
          NX_8BASE_API_TOKEN: ${{ secrets.NX_8BASE_API_ADMIN_TOKEN }}
      - run: npx nx affected --target=e2e
        env:
          NX_8BASE_API_TOKEN: ${{ secrets.NX_8BASE_API_ADMIN_TOKEN }}

  codeQl:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'typescript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  snykNode:
    name: Snyk Node Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache PNPM modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: latest
          run_install: true
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=low --all-projects

  snykSarif:
    name: Snyk Sarif
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache PNPM modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: latest
          run_install: true
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

  sonar:
    name: Sonar Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  mainMerge:
    name: Merge to Main
    needs: [ test, codeQl, snykNode, snykSarif, sonar ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Merge to Main
        uses: devmasx/merge-branch@1.4.0
        with:
          type: now
          target_branch: master
          github_token: ${{ github.token }}
